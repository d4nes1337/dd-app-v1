{"version":3,"file":"components-Cp5QEf23.js","sources":["../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/components/ui/sonner.tsx","../../src/components/ui/tooltip.tsx","../../src/components/BottomNavigation.tsx","../../src/components/PageLayout.tsx","../../src/components/EmojiAvatar.tsx","../../src/components/UserAvatar.tsx","../../src/components/Banner.tsx","../../src/components/ProductCard.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/SizeSelector.tsx","../../src/components/PhotoSwiper.tsx","../../src/components/ui/badge.tsx","../../src/components/OrderCard.tsx","../../src/components/ReferralCard.tsx","../../src/components/ClientInfoForm.tsx","../../src/components/CartItem/CartItem.tsx","../../src/components/PromocodeInput.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","import { useTheme } from \"next-themes\"\nimport { Toaster as Sonner } from \"sonner\"\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      toastOptions={{\n        classNames: {\n          toast:\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\n          description: \"group-[.toast]:text-muted-foreground\",\n          actionButton:\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\n          cancelButton:\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n","import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import React from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { Home, ShoppingCart, Calculator } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useCart } from '@/contexts/CartContext';\nimport { useTheme } from 'next-themes';\nimport { hapticSelection } from '@/utils/telegramUtils';\n\nconst BottomNavigation: React.FC = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { itemCount } = useCart();\n  const { theme } = useTheme();\n  \n  const isActive = (path: string) => location.pathname === path;\n  \n  // Custom navigation handler with haptic feedback\n  const handleNavigation = (path: string) => (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Only trigger haptic feedback and navigate if not already on this path\n    if (!isActive(path)) {\n      // Trigger haptic feedback\n      hapticSelection();\n      \n      // Navigate to the path\n      navigate(path);\n    }\n  };\n  \n  return (\n    <nav className=\"fixed bottom-0 left-0 right-0 z-50 bottom-nav-bar pb-4\">\n      <div className=\"grid grid-cols-3 w-full max-w-md mx-auto h-24\">\n        <Link\n          to=\"/\"\n          onClick={handleNavigation('/')}\n          className={cn(\n            'flex items-center justify-center transition-all duration-200',\n            isActive('/') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/') ? 'page' : undefined}\n        >\n          <Home size={32} />\n        </Link>\n        \n        <Link\n          to=\"/shop\"\n          onClick={handleNavigation('/shop')}\n          className={cn(\n            'flex items-center justify-center relative transition-all duration-200',\n            isActive('/shop') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/shop') ? 'page' : undefined}\n        >\n          <div className=\"relative\">\n            <ShoppingCart size={32} />\n            {itemCount > 0 && (\n              <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold w-6 h-6 flex items-center justify-center rounded-full badge\">\n                {itemCount}\n              </span>\n            )}\n          </div>\n        </Link>\n        \n        <Link\n          to=\"/calculator\"\n          onClick={handleNavigation('/calculator')}\n          className={cn(\n            'flex items-center justify-center transition-all duration-200',\n            isActive('/calculator') ? 'text-telegram-button active' : 'text-telegram-hint'\n          )}\n          aria-current={isActive('/calculator') ? 'page' : undefined}\n        >\n          <Calculator size={32} />\n        </Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default BottomNavigation;\n\n","import React, { ReactNode } from 'react';\nimport BottomNavigation from './BottomNavigation';\nimport { cn } from '@/lib/utils';\n\ninterface PageLayoutProps {\n  children: ReactNode;\n  className?: string;\n  fullHeight?: boolean;\n}\n\nconst PageLayout: React.FC<PageLayoutProps> = ({\n  children,\n  className,\n  fullHeight = false,\n}) => {\n  return (\n    <div\n      className={cn(\n        'w-full pb-52 max-w-md mx-auto', // Increased bottom padding for better mobile spacing\n        fullHeight ? 'min-h-screen' : '',\n        className\n      )}\n      style={{ backgroundColor: 'transparent' }}\n    >\n      <div className=\"animate-fade-in\">\n        {children}\n      </div>\n      <BottomNavigation />\n    </div>\n  );\n};\n\nexport default PageLayout;\n","\nimport React, { useEffect, useState } from 'react';\nimport { cn } from '@/lib/utils';\nimport { getRandomAvatarEmoji, getConsistentEmoji } from '@/utils/emojiUtils';\n\ninterface EmojiAvatarProps {\n  emoji?: string;\n  username?: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  randomize?: boolean;\n}\n\nconst EmojiAvatar: React.FC<EmojiAvatarProps> = ({\n  emoji,\n  username,\n  size = 'md',\n  className,\n  randomize = false,\n}) => {\n  const [displayEmoji, setDisplayEmoji] = useState<string>(emoji || '😊');\n\n  useEffect(() => {\n    if (emoji) {\n      setDisplayEmoji(emoji);\n    } else if (username) {\n      setDisplayEmoji(getConsistentEmoji(username, 'avatar'));\n    } else if (randomize) {\n      setDisplayEmoji(getRandomAvatarEmoji());\n    }\n  }, [emoji, username, randomize]);\n\n  const sizeClasses = {\n    sm: 'w-8 h-8 text-lg',\n    md: 'w-12 h-12 text-2xl',\n    lg: 'w-16 h-16 text-3xl',\n  };\n\n  return (\n    <div \n      className={cn(\n        'flex items-center justify-center rounded-full bg-telegram-light animate-pulse-slow',\n        sizeClasses[size],\n        className\n      )}\n    >\n      <span className=\"animate-float\">{displayEmoji}</span>\n    </div>\n  );\n};\n\nexport default EmojiAvatar;\n","import React from 'react';\nimport EmojiAvatar from './EmojiAvatar';\nimport { TelegramUser } from '@/services/api';\n\ninterface UserAvatarProps {\n  user: TelegramUser | null;\n  emoji: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nconst UserAvatar: React.FC<UserAvatarProps> = ({ \n  user, \n  emoji, \n  size = 'md', \n  className = '' \n}) => {\n  // Size mapping for the avatar\n  const sizeMap = {\n    sm: 'w-8 h-8',\n    md: 'w-12 h-12',\n    lg: 'w-16 h-16'\n  };\n  \n  const sizeClass = sizeMap[size];\n  \n  // If user has a photo_url, display it\n  if (user?.photo_url) {\n    return (\n      <div className={`${sizeClass} rounded-full overflow-hidden ${className}`}>\n        <img \n          src={user.photo_url} \n          alt={`${user.first_name}'s profile`} \n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            // Fallback to emoji avatar if image fails to load\n            console.error('Error loading profile image, falling back to emoji avatar');\n            e.currentTarget.style.display = 'none';\n            // We can't directly render the EmojiAvatar here, so we'll just hide the img\n          }}\n        />\n      </div>\n    );\n  }\n  \n  // Otherwise, use the emoji avatar\n  return (\n    <EmojiAvatar \n      emoji={emoji} \n      size={size} \n      className={className}\n    />\n  );\n};\n\nexport default UserAvatar; ","import React, { useState, useEffect } from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { useNavigate } from 'react-router-dom';\n\ninterface BannerProps {\n  image: string;\n  link?: string;\n  className?: string;\n}\n\nconst Banner: React.FC<BannerProps> = ({ \n  image, \n  link,\n  className\n}) => {\n  const navigate = useNavigate();\n  \n  const handleClick = () => {\n    if (link) {\n      navigate(link);\n    }\n  };\n\n  return (\n    <div \n      className={cn(\n        'w-full h-48 bg-cover bg-center rounded-lg cursor-pointer shadow-sm hover:shadow-md transition-all',\n        className\n      )}\n      style={{ backgroundImage: `url(${image})` }}\n      onClick={handleClick}\n    />\n  );\n};\n\ninterface BannerSliderProps {\n  banners: Array<{\n    image: string;\n    link?: string;\n  }>;\n  className?: string;\n  autoPlay?: boolean;\n  interval?: number;\n}\n\nconst BannerSlider: React.FC<BannerSliderProps> = ({\n  banners,\n  className,\n  autoPlay = true,\n  interval = 5000,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n\n  const nextBanner = () => {\n    if (isTransitioning || banners.length <= 1) return;\n    \n    setIsTransitioning(true);\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % banners.length);\n    \n    // Reset transition state after animation completes\n    setTimeout(() => {\n      setIsTransitioning(false);\n    }, 500);\n  };\n\n  const prevBanner = () => {\n    if (isTransitioning || banners.length <= 1) return;\n    \n    setIsTransitioning(true);\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + banners.length) % banners.length);\n    \n    // Reset transition state after animation completes\n    setTimeout(() => {\n      setIsTransitioning(false);\n    }, 500);\n  };\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (!autoPlay || banners.length <= 1) return;\n    \n    const timer = setInterval(() => {\n      nextBanner();\n    }, interval);\n    \n    return () => clearInterval(timer);\n  }, [autoPlay, interval, currentIndex, isTransitioning, banners.length]);\n\n  if (banners.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={cn('relative', className)}>\n      <div className=\"overflow-hidden rounded-lg\">\n        <div \n          className=\"flex transition-transform duration-500 ease-in-out\"\n          style={{ transform: `translateX(-${currentIndex * 100}%)` }}\n        >\n          {banners.map((banner, index) => (\n            <div key={index} className=\"min-w-full\">\n              <Banner\n                image={banner.image}\n                link={banner.link}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      {/* Navigation dots - only show if multiple banners */}\n      {banners.length > 1 && (\n        <div className=\"flex justify-center mt-4 space-x-2\">\n          {banners.map((_, index) => (\n            <button\n              key={index}\n              className={cn(\n                'w-2 h-2 rounded-full transition-all duration-300',\n                index === currentIndex \n                  ? 'bg-telegram-blue dark:bg-telegram-dark w-4' \n                  : 'bg-gray-300 dark:bg-gray-600'\n              )}\n              onClick={() => setCurrentIndex(index)}\n            />\n          ))}\n        </div>\n      )}\n      \n      {/* Arrow controls - only show if multiple banners */}\n      {banners.length > 1 && (\n        <>\n          <button\n            onClick={prevBanner}\n            className=\"absolute left-2 top-1/2 -translate-y-1/2 w-8 h-8 rounded-full bg-white/80 dark:bg-gray-800/80 flex items-center justify-center shadow-md hover:bg-white dark:hover:bg-gray-700 transition-colors\"\n            aria-label=\"Previous banner\"\n          >\n            <ChevronLeft size={20} className=\"text-gray-800 dark:text-gray-200\" />\n          </button>\n          \n          <button\n            onClick={nextBanner}\n            className=\"absolute right-2 top-1/2 -translate-y-1/2 w-8 h-8 rounded-full bg-white/80 dark:bg-gray-800/80 flex items-center justify-center shadow-md hover:bg-white dark:hover:bg-gray-700 transition-colors\"\n            aria-label=\"Next banner\"\n          >\n            <ChevronRight size={20} className=\"text-gray-800 dark:text-gray-200\" />\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport { Banner, BannerSlider };\n","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getConsistentEmoji } from '@/utils/emojiUtils';\nimport { cn } from '@/lib/utils';\nimport { StockItem } from '@/services/api';\nimport { hapticImpact } from '@/utils/telegramUtils';\n\ninterface ProductCardProps {\n  product: StockItem;\n  className?: string;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ product, className }) => {\n  const navigate = useNavigate();\n  \n  // Get a consistent emoji based on the product name and color\n  const productEmoji = getConsistentEmoji(`${product.item_name}-${product.color_code}`, 'product');\n  \n  // Get available sizes from the new format (array of SizeAvailability)\n  const availableSizes = Array.isArray(product.sizes) \n    ? product.sizes.filter(size => size.quantity > 0).map(size => size.size) \n    : [];\n\n  // Check if product has photos\n  const hasPhoto = product.photos && product.photos.length > 0;\n  \n  // Get the front photo URL (or first available)\n  const getPhotoUrl = () => {\n    if (!hasPhoto) return '';\n    \n    // Try to find a 'front' photo first\n    const frontPhoto = product.photos!.find(photo => \n      photo.photo_category === 'front' && photo.photo_url);\n    \n    // If no front photo, use the first photo\n    return frontPhoto \n      ? frontPhoto.photo_url \n      : product.photos![0].photo_url;\n  };\n  \n  // Handle click with haptic feedback\n  const handleClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    \n    // Trigger medium impact haptic feedback\n    hapticImpact('medium');\n    \n    // Navigate to product details\n    navigate(`/product/${product.sku}`);\n  };\n  \n  return (\n    <Link \n      to={`/product/${product.sku}`} \n      onClick={handleClick}\n      className={cn(\n        'block bg-telegram-secondary-bg rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all duration-300 hover-lift',\n        className\n      )}\n    >\n      <div className=\"aspect-square bg-telegram-bg flex items-center justify-center\">\n        {hasPhoto ? (\n          <img \n            src={getPhotoUrl()} \n            alt={product.item_name}\n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              // Fallback to emoji if image fails to load\n              e.currentTarget.style.display = 'none';\n              e.currentTarget.parentElement!.innerHTML = `<span class=\"text-5xl animate-float\">${productEmoji}</span>`;\n            }}\n          />\n        ) : (\n          <span className=\"text-5xl animate-float\">{productEmoji}</span>\n        )}\n      </div>\n      \n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-start mb-1\">\n          <h3 className=\"font-medium text-telegram-text truncate\">{product.item_name}</h3>\n          {product.brand && (\n            <span className=\"text-xs text-telegram-hint bg-telegram-bg px-2 py-0.5 rounded-full\">\n              {product.brand}\n            </span>\n          )}\n        </div>\n        <div className=\"flex justify-between items-center\">\n          <span className=\"text-sm text-telegram-hint\">\n            Color: {product.color_code}\n          </span>\n          <span className=\"font-medium text-telegram-button\">\n            ₽{typeof product.price_rub === 'string' \n              ? parseFloat(product.price_rub).toLocaleString() \n              : product.price_rub.toLocaleString()}\n          </span>\n        </div>\n        <div className=\"mt-2 flex flex-wrap gap-1\">\n          {availableSizes.slice(0, 3).map((size) => (\n            <span key={size} className=\"text-xs px-2 py-1 bg-telegram-bg text-telegram-text rounded-full\">\n              {size}\n            </span>\n          ))}\n          {availableSizes.length > 3 && (\n            <span className=\"text-xs px-2 py-1 bg-telegram-bg text-telegram-text rounded-full\">\n              +{availableSizes.length - 3}\n            </span>\n          )}\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ProductCard;\n","\nimport React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  fillColor?: string;\n}\n\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({\n  size = 'md',\n  className,\n  fillColor = 'fill-telegram-blue',\n}) => {\n  const sizeClasses = {\n    sm: 'w-6 h-6',\n    md: 'w-10 h-10',\n    lg: 'w-16 h-16',\n  };\n\n  return (\n    <div className=\"flex justify-center items-center\">\n      <svg\n        className={cn(\n          'animate-spin',\n          sizeClasses[size],\n          className\n        )}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle\n          className=\"opacity-25\"\n          cx=\"12\"\n          cy=\"12\"\n          r=\"10\"\n          stroke=\"currentColor\"\n          strokeWidth=\"4\"\n        ></circle>\n        <path\n          className={fillColor}\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        ></path>\n      </svg>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { cn } from '@/lib/utils';\n\ninterface SizeSelectorProps {\n  availableSizes: string[];\n  selectedSize: string;\n  onChange: (size: string) => void;\n  className?: string;\n}\n\nconst SizeSelector: React.FC<SizeSelectorProps> = ({\n  availableSizes,\n  selectedSize,\n  onChange,\n  className,\n}) => {\n  const handleSizeChange = (size: string) => {\n    onChange(size);\n  };\n\n  return (\n    <div className={cn('w-full', className)}>\n      <h3 className=\"text-sm font-medium text-telegram-text mb-2\">Выберите размер</h3>\n      \n      <div className=\"flex flex-wrap gap-2\">\n        {availableSizes.map((size) => (\n          <button\n            key={size}\n            className={cn(\n              'px-4 py-2 rounded-full border transition-all duration-200',\n              selectedSize === size\n                ? 'border-telegram-button bg-telegram-button/10 text-telegram-button'\n                : 'border-telegram-hint/30 bg-telegram-bg text-telegram-text hover:border-telegram-hint/50'\n            )}\n            onClick={() => handleSizeChange(size)}\n          >\n            {size}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SizeSelector;\n","import React, { useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Navigation, A11y } from 'swiper/modules';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\n// Import Swiper styles - make sure they are imported in this order for proper styling\nimport 'swiper/css';\nimport 'swiper/css/pagination';\nimport 'swiper/css/navigation';\nimport 'swiper/css/effect-fade';\n\n// Custom overrides for Swiper styles\nimport './PhotoSwiper.css';\n\ninterface PhotoSwiperProps {\n  photos: string[];\n  productName: string;\n  fallbackEmoji?: string;\n  className?: string;\n}\n\nconst PhotoSwiper: React.FC<PhotoSwiperProps> = ({ \n  photos,\n  productName,\n  fallbackEmoji = '📦',\n  className = '',\n}) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  \n  // Handle image loading errors\n  const handleImageError = (e: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    const target = e.currentTarget;\n    target.style.display = 'none';\n    if (target.parentElement) {\n      const fallbackElement = document.createElement('div');\n      fallbackElement.className = 'w-full h-full flex items-center justify-center';\n      fallbackElement.innerHTML = `<span class=\"text-8xl animate-float\">${fallbackEmoji}</span>`;\n      target.parentElement.appendChild(fallbackElement);\n    }\n  };\n  \n  if (!photos || photos.length === 0) {\n    return (\n      <div className={`w-full aspect-square bg-telegram-bg flex items-center justify-center ${className}`}>\n        <span className=\"text-8xl animate-float\">{fallbackEmoji}</span>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`photo-swiper-container w-full aspect-square bg-telegram-bg relative ${className}`}>\n      <Swiper\n        modules={[Pagination, Navigation, A11y]}\n        spaceBetween={0}\n        slidesPerView={1}\n        pagination={{ \n          clickable: true,\n          type: 'bullets',\n          bulletClass: 'swiper-pagination-bullet',\n          bulletActiveClass: 'swiper-pagination-bullet-active'\n        }}\n        navigation={true}\n        onSlideChange={(swiper) => {\n          setCurrentIndex(swiper.activeIndex);\n        }}\n        className=\"w-full h-full\"\n      >\n        {photos.map((photo, index) => (\n          <SwiperSlide key={index} className=\"w-full h-full\">\n            <img \n              src={photo} \n              alt={`${productName} - ${index + 1}`}\n              className=\"w-full h-full object-cover\"\n              onError={handleImageError}\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n      \n      {/* Custom pagination indicator for better visibility */}\n      {photos.length > 1 && (\n        <div className=\"absolute bottom-3 left-1/2 -translate-x-1/2 bg-black/40 rounded-full px-3 py-1 z-10\">\n          <span className=\"text-white text-xs\">\n            {currentIndex + 1} / {photos.length}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PhotoSwiper; ","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import React, { useState } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { ChevronDown, ChevronUp, ExternalLink } from 'lucide-react';\n\ninterface OrderItem {\n  id: number;\n  type: 'stock' | 'preorder';\n  sku: string | null;\n  item_name: string | null;\n  size: string;\n  price_cny: string;\n  price_rub: string;\n  status: string;\n  dewu_url: string | null;\n  shipping_type: string | null;\n  category_type: string | null;\n  weight_category: string | null;\n  color_code: string | null;\n  quantity: number;\n}\n\ninterface OrderPromocode {\n  promocode_text: string;\n  discount_fixed: number | null;\n  discount_percent: string | null;\n}\n\ninterface Order {\n  order_id: number;\n  created_at: string;\n  items: OrderItem[];\n  prepay_amount: string;\n  status: string;\n  promocode: OrderPromocode | null;\n  subtotal: string;\n  final_price: string;\n  discount_amount: string;\n  dd_coins_used: string;\n  delivery_type: string;\n  delivery_price: string;\n  delivery_address: string | null;\n  delivery_info: string | null;\n  delivery_code: string | null;\n}\n\ninterface OrderCardProps {\n  order: Order;\n}\n\nconst OrderCard: React.FC<OrderCardProps> = ({ order }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const getStatusColor = (status: string): string => {\n    switch (status.toLowerCase()) {\n      case 'delivered':\n      case 'доставлен':\n        return 'bg-green-500';\n      case 'awaiting manager':\n      case 'ожидает менеджера':\n        return 'bg-yellow-500';\n      case 'awaiting purchase':\n      case 'ожидает покупки':\n        return 'bg-blue-500';\n      case 'cancelled':\n      case 'отменён':\n        return 'bg-red-500';\n      default:\n        return 'bg-gray-500';\n    }\n  };\n\n  const translateStatus = (status: string): string => {\n    switch (status.toLowerCase()) {\n      case 'delivered':\n        return 'Доставлен';\n      case 'awaiting manager':\n        return 'Ожидает менеджера';\n      case 'awaiting purchase':\n        return 'Ожидает покупки';\n      case 'cancelled':\n        return 'Отменён';\n      default:\n        return status;\n    }\n  };\n\n  const formatPrice = (price: string | number | null): string => {\n    if (!price) return '0';\n    const numericPrice = typeof price === 'string' ? parseFloat(price) : price;\n    return numericPrice.toLocaleString('ru-RU', { maximumFractionDigits: 2 });\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getItemsCountText = (count: number): string => {\n    // Rules for Russian pluralization\n    if (count % 10 === 1 && count % 100 !== 11) {\n      return 'товар';\n    } else if ([2, 3, 4].includes(count % 10) && ![12, 13, 14].includes(count % 100)) {\n      return 'товара';\n    } else {\n      return 'товаров';\n    }\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-sidebar-accent rounded-lg shadow-sm overflow-hidden\">\n      {/* Order Summary - Always Visible */}\n      <div \n        className=\"p-4 cursor-pointer hover:bg-gray-50 dark:hover:bg-sidebar-primary/10 transition-colors\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <div className=\"flex items-center gap-2\">\n              <h3 className=\"text-lg font-medium\">Заказ #{order.order_id}</h3>\n              <Badge className={`${getStatusColor(order.status)} text-white`}>\n                {translateStatus(order.status)}\n              </Badge>\n            </div>\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n              {formatDate(order.created_at)}\n            </p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n              {order.items.length} {getItemsCountText(order.items.length)}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"font-medium text-lg\">₽{formatPrice(order.final_price)}</p>\n            {order.promocode && (\n              <p className=\"text-sm text-telegram-blue\">\n                {order.promocode.promocode_text}\n              </p>\n            )}\n            <button \n              className=\"mt-2 text-telegram-blue hover:text-telegram-dark transition-colors\"\n              aria-label={isExpanded ? 'Свернуть детали' : 'Развернуть детали'}\n            >\n              {isExpanded ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Order Details - Expandable */}\n      {isExpanded && (\n        <div className=\"border-t border-gray-100 dark:border-gray-800/50\">\n          <div className=\"p-4 space-y-4\">\n            {/* Order Items */}\n            {order.items.map((item, index) => (\n              <div \n                key={`item-${index}-${item.id}`} \n                className=\"border-b dark:border-gray-700 pb-3 last:border-0\"\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <div className=\"flex flex-wrap gap-2 mb-1\">\n                      <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">\n                        {item.type === 'stock' ? 'Сток' : 'Предзаказ'}\n                      </Badge>\n                      {item.status && (\n                        <Badge className={`${getStatusColor(item.status)} text-white`}>\n                          {translateStatus(item.status)}\n                        </Badge>\n                      )}\n                    </div>\n                    \n                    <p className=\"font-medium\">\n                      {item.item_name || (item.dewu_url ? (\n                        <a \n                          href={item.dewu_url} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\"\n                          className=\"text-telegram-blue hover:underline flex items-center\"\n                        >\n                          {item.dewu_url.substring(0, 30)}{item.dewu_url.length > 30 ? '...' : ''}\n                          <ExternalLink size={14} className=\"ml-1\" />\n                        </a>\n                      ) : 'Товар')}\n                    </p>\n                    \n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      Размер: {item.size} {item.quantity > 1 && `× ${item.quantity}`}\n                    </p>\n                    \n                    {item.type === 'preorder' && item.price_cny && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Цена (юани): ¥{formatPrice(item.price_cny)}\n                      </p>\n                    )}\n                    \n                    {item.sku && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Артикул: {item.sku}\n                      </p>\n                    )}\n                    \n                    {item.shipping_type && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Тип доставки: {item.shipping_type}\n                      </p>\n                    )}\n                    \n                    {item.category_type && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Категория: {item.category_type}\n                      </p>\n                    )}\n                    \n                    {item.weight_category && (\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Вес: {item.weight_category}\n                      </p>\n                    )}\n                    \n                    {item.color_code && (\n                      <div className=\"flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400\">\n                        <span>Цвет:</span>\n                        <div \n                          className=\"w-4 h-4 rounded-full border border-gray-300\" \n                          style={{ backgroundColor: item.color_code }}\n                        ></div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <div className=\"text-right\">\n                    <p className=\"font-medium\">₽{formatPrice(item.price_rub)}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {/* Order Summary */}\n            <div className=\"pt-3 border-t dark:border-gray-700\">\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span className=\"text-gray-600 dark:text-gray-400\">Сумма товаров</span>\n                <span>₽{formatPrice(order.subtotal)}</span>\n              </div>\n\n              {order.delivery_code && (\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">\n                    Доставка: {order.delivery_code}\n                  </span>\n                  <span>\n                    {order.delivery_price === \"0\" ? \n                      \"Бесплатно\" : \n                      `₽${formatPrice(order.delivery_price)}`}\n                  </span>\n                </div>\n              )}\n\n              {order.promocode && (\n                <div className=\"flex justify-between text-sm text-telegram-blue mb-1\">\n                  <span>\n                    Промокод: {order.promocode.promocode_text}\n                    {order.promocode.discount_percent && order.promocode.discount_percent !== 'null' && \n                      ` (-${order.promocode.discount_percent}%)`}\n                    {order.promocode.discount_fixed && \n                      ` (-${order.promocode.discount_fixed}₽)`}\n                  </span>\n                  <span>-₽{formatPrice(order.discount_amount)}</span>\n                </div>\n              )}\n\n              {order.discount_amount && order.discount_amount !== \"0\" && !order.promocode && (\n                <div className=\"flex justify-between text-sm text-telegram-blue mb-1\">\n                  <span>Скидка</span>\n                  <span>-₽{formatPrice(order.discount_amount)}</span>\n                </div>\n              )}\n\n              {order.dd_coins_used && order.dd_coins_used !== \"0\" && (\n                <div className=\"flex justify-between text-sm text-yellow-500 mb-1\">\n                  <span>Использовано DD Коинов</span>\n                  <span>-₽{formatPrice(order.dd_coins_used)}</span>\n                </div>\n              )}\n\n              {order.prepay_amount && order.prepay_amount !== \"0\" && (\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-600 dark:text-gray-400\">Предоплата</span>\n                  <span>₽{formatPrice(order.prepay_amount)}</span>\n                </div>\n              )}\n\n              <div className=\"flex justify-between font-medium text-base mt-2\">\n                <span>Итого</span>\n                <span>₽{formatPrice(order.final_price)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OrderCard; ","import React, { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Share2, Copy, Loader2, RefreshCw } from 'lucide-react';\nimport { toast } from 'sonner';\nimport { getUserReferralInfo, getReferralStats, shareReferralLink } from '@/services/api/referralService';\nimport { ReferralInfo, ReferralStats } from '@/services/api/types';\n\ninterface ReferralCardProps {\n  className?: string;\n}\n\nconst ReferralCard: React.FC<ReferralCardProps> = ({ className }) => {\n  const [loadError, setLoadError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { data: referralInfo, refetch: refetchReferralInfo } = useQuery({\n    queryKey: ['referralInfo'],\n    queryFn: () => getUserReferralInfo(),\n    staleTime: 60 * 1000, // 1 minute\n    retry: 1,\n    retryDelay: 1000,\n  });\n\n  const { data: referralStats, refetch: refetchStats } = useQuery({\n    queryKey: ['referralStats'],\n    queryFn: () => getReferralStats(),\n    staleTime: 60 * 1000, // 1 minute\n    retry: 1,\n    retryDelay: 1000,\n  });\n\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      setLoadError(null);\n      try {\n        await Promise.all([\n          refetchReferralInfo(),\n          refetchStats()\n        ]);\n      } catch (error) {\n        console.error('Error loading referral data:', error);\n        setLoadError('Failed to load referral information');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, [refetchReferralInfo, refetchStats]);\n\n  const handleShare = async () => {\n    if (!referralInfo) return;\n    await shareReferralLink(referralInfo);\n  };\n\n  const handleCopyLink = async () => {\n    if (!referralInfo) return;\n    try {\n      await navigator.clipboard.writeText(referralInfo.telegram_deep_link);\n      toast.success('Referral link copied to clipboard');\n    } catch (error) {\n      console.error('Error copying to clipboard:', error);\n      toast.error('Failed to copy referral link');\n    }\n  };\n\n  const handleRetry = () => {\n    setIsLoading(true);\n    setLoadError(null);\n    Promise.all([\n      refetchReferralInfo(),\n      refetchStats()\n    ]).finally(() => setIsLoading(false));\n  };\n\n  if (isLoading) {\n    return (\n      <div className={`p-4 text-center ${className}`}>\n        <Loader2 className=\"animate-spin mx-auto h-6 w-6 text-telegram-blue\" />\n        <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">Loading referral information...</p>\n      </div>\n    );\n  }\n\n  if (loadError) {\n    return (\n      <div className={`p-4 text-center ${className}`}>\n        <p className=\"text-sm text-red-600 dark:text-red-400 mb-2\">{loadError}</p>\n        <button\n          onClick={handleRetry}\n          className=\"inline-flex items-center text-sm text-telegram-blue hover:text-telegram-dark\"\n        >\n          <RefreshCw className=\"mr-1 h-4 w-4\" />\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Referral Link Section */}\n      <div className=\"p-4 bg-telegram-secondary-bg rounded-lg\">\n        <h3 className=\"text-sm font-medium mb-2\">Your Referral Link</h3>\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"text\"\n            readOnly\n            value={referralInfo?.telegram_deep_link || ''}\n            className=\"flex-1 p-2 text-sm bg-white dark:bg-sidebar-primary/30 border border-gray-300 dark:border-gray-700 rounded-md\"\n          />\n          <button\n            onClick={handleCopyLink}\n            className=\"p-2 text-telegram-blue hover:text-telegram-dark\"\n            title=\"Copy link\"\n          >\n            <Copy size={18} />\n          </button>\n          <button\n            onClick={handleShare}\n            className=\"p-2 text-telegram-blue hover:text-telegram-dark\"\n            title=\"Share link\"\n          >\n            <Share2 size={18} />\n          </button>\n        </div>\n      </div>\n\n      {/* Referrals List Section */}\n      <div className=\"p-4 bg-telegram-secondary-bg rounded-lg\">\n        <h3 className=\"text-sm font-medium mb-2\">Your Referrals</h3>\n        {referralStats?.referred_users && referralStats.referred_users.length > 0 ? (\n          <div className=\"space-y-2\">\n            {referralStats.referred_users.map((user) => (\n              <div key={user.id} className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-700 dark:text-gray-300\">\n                  {user.username ? `@${user.username}` : `User ${user.id}`}\n                </span>\n                <span className=\"text-gray-500 dark:text-gray-400\">\n                  Joined {new Date(user.joined_at).toLocaleDateString()}\n                </span>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n            No referrals yet. Share your link to start earning rewards!\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ReferralCard; ","import React, { useState, useEffect } from 'react';\nimport { updateClientInfo, getClientInfo } from '@/services/api/clientService';\nimport { Loader2 } from 'lucide-react';\nimport { fetchDeliveryTypes } from '@/services/api/orderService';\nimport { DeliveryRate } from '@/services/api/types';\nimport { toast } from 'sonner';\n\ninterface DeliveryType {\n  id: number;\n  delivery_type: string;\n  price_rub: number;\n  delivery_info: string;\n  delivery_code: string;\n}\n\ninterface ClientInfoFormProps {\n  initialEmail?: string;\n  initialPhone?: string;\n  initialAddress?: string;\n  clientInfo?: { email: string; phone_number: string; address: string } | null;\n  onComplete: (deliveryRate?: DeliveryRate) => void;\n  onCancel?: () => void;\n}\n\nconst ClientInfoForm: React.FC<ClientInfoFormProps> = ({\n  initialEmail = '',\n  initialPhone = '',\n  initialAddress = '',\n  clientInfo = null,\n  onComplete,\n  onCancel\n}) => {\n  // Use client info if provided, otherwise use initial values\n  const [email, setEmail] = useState<string>(clientInfo?.email || initialEmail);\n  const [phone, setPhone] = useState<string>(clientInfo?.phone_number || initialPhone);\n  const [address, setAddress] = useState<string>(clientInfo?.address || initialAddress);\n  const [isSubmitting, setIsSubmitting] = useState<boolean>(false);\n  const [deliveryTypes, setDeliveryTypes] = useState<DeliveryType[]>([]);\n  const [selectedDeliveryType, setSelectedDeliveryType] = useState<string>('');\n  const [isLoadingRates, setIsLoadingRates] = useState<boolean>(false);\n  \n  // Determine if all required fields are already filled\n  const hasAllRequiredInfo = Boolean(email && phone && address);\n\n  // Fetch delivery types on component mount\n  useEffect(() => {\n    const fetchDeliveryOptions = async () => {\n      setIsLoadingRates(true);\n      try {\n        const types = await fetchDeliveryTypes();\n        setDeliveryTypes(types);\n        \n        // Set default delivery type if available\n        if (types.length > 0) {\n          const courierType = types.find(type => type.delivery_type === 'courier');\n          const shippingType = types.find(type => type.delivery_type === 'shipping');\n          const defaultType = courierType || shippingType || types[0];\n          setSelectedDeliveryType(defaultType.delivery_type);\n        }\n      } catch (error) {\n        console.error('Failed to load delivery types:', error);\n      } finally {\n        setIsLoadingRates(false);\n      }\n    };\n    \n    // Fetch client info if not provided\n    const fetchClientInfo = async () => {\n      if (!clientInfo) {\n        try {\n          const info = await getClientInfo();\n          if (info) {\n            setEmail(info.email || '');\n            setPhone(info.phone_number || '');\n            setAddress(info.address || '');\n          }\n        } catch (error) {\n          console.error('Error fetching client info:', error);\n        }\n      }\n    };\n    \n    fetchDeliveryOptions();\n    fetchClientInfo();\n  }, [clientInfo]);\n\n  // Get the selected delivery type object\n  const selectedDeliveryOption = deliveryTypes.find(type => type.delivery_type === selectedDeliveryType);\n  // Convert to DeliveryRate format for compatibility with existing code\n  const selectedDeliveryRate: DeliveryRate | undefined = selectedDeliveryOption ? {\n    delivery_type: selectedDeliveryOption.delivery_type,\n    price_rub: selectedDeliveryOption.price_rub\n  } : undefined;\n  \n  const isSelfPickup = selectedDeliveryType === 'self_pickup';\n  \n  // Store the original user address\n  const [userAddress, setUserAddress] = useState<string>('');\n\n  // Update user address when it changes\n  useEffect(() => {\n    const initialAddr = clientInfo?.address || initialAddress;\n    if (initialAddr) {\n      setUserAddress(initialAddr);\n    }\n  }, [initialAddress, clientInfo]);\n\n  // Set displayed address to the store address if self pickup is selected\n  useEffect(() => {\n    if (isSelfPickup) {\n      setAddress('Москва, Ильменский проезд, 14к8');\n    } else {\n      setAddress(userAddress);\n    }\n  }, [isSelfPickup, userAddress]);\n\n  // Update the user address when typing in the address field (only when not self-pickup)\n  const handleAddressChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const newAddress = e.target.value;\n    setAddress(newAddress);\n    if (!isSelfPickup) {\n      setUserAddress(newAddress);\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n\n    try {\n      if (!email || !phone || !selectedDeliveryType) {\n        alert('Please fill in all required fields');\n        setIsSubmitting(false);\n        return;\n      }\n\n      // Always update client info with the user's actual address, not the pickup address\n      const addressToStore = isSelfPickup ? userAddress : address;\n      \n      // Always update client info before proceeding with order\n      const success = await updateClientInfo(phone, email, addressToStore);\n\n      if (success) {\n        // alert(\"Setting delivery type to \" + selectedDeliveryRate?.delivery_type);\n        onComplete(selectedDeliveryRate);\n      } else {\n        toast.error('Failed to update client information');\n      }\n    } catch (error) {\n      console.error('Error updating client info:', error);\n      toast.error('Failed to update client information');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black/30 dark:bg-black/50 flex items-start justify-center z-50 p-4 overflow-y-auto\">\n      <div className=\"bg-white dark:bg-sidebar-accent rounded-lg shadow-lg max-w-md w-full my-8\">\n        <div className=\"p-4 border-b dark:border-gray-700\">\n          <h2 className=\"text-lg font-semibold\">Заполните свои данные</h2>\n          <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\n            {hasAllRequiredInfo ? 'Пожалуйста, проверьте свои контактные данные.' : 'Нам нужны ваши контактные данные для обработки заказа.'}\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"p-4 space-y-4\">\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Электронная почта <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 dark:border-gray-700 rounded dark:bg-sidebar-primary\"\n              placeholder=\"ваша@почта.com\"\n              required\n            />\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Номер телефона <span className=\"text-red-500\">*</span>\n            </label>\n            <input\n              type=\"tel\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 dark:border-gray-700 rounded dark:bg-sidebar-primary\"\n              placeholder=\"+7 (999) 123-4567\"\n              required\n            />\n          </div>\n\n          {/* Delivery Type Selection */}\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Способ доставки <span className=\"text-red-500\">*</span>\n            </label>\n            {isLoadingRates ? (\n              <div className=\"flex items-center space-x-2\">\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n                <span>Загрузка вариантов доставки...</span>\n              </div>\n            ) : deliveryTypes.length === 0 ? (\n              <div className=\"text-red-500\">\n                Ошибка загрузки вариантов доставки. Пожалуйста, попробуйте позже.\n              </div>\n            ) : (\n              <div className=\"grid gap-2\">\n                {deliveryTypes.map(type => (\n                  <div \n                    key={type.delivery_type}\n                    className={`p-3 border rounded-lg cursor-pointer transition-colors ${\n                      selectedDeliveryType === type.delivery_type\n                        ? 'border-telegram-blue bg-telegram-blue/10'\n                        : 'border-gray-300 dark:border-gray-700'\n                    }`}\n                    onClick={() => setSelectedDeliveryType(type.delivery_type)}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"font-medium\">{type.delivery_code}</div>\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          {type.delivery_info}\n                        </div>\n                      </div>\n                      <div className=\"text-telegram-blue font-medium\">\n                        {type.price_rub > 0 ? `₽${type.price_rub}` : 'Бесплатно'}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium\">\n              Адрес доставки {(selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping') && <span className=\"text-red-500\">*</span>}\n            </label>\n            <textarea\n              value={address}\n              onChange={handleAddressChange}\n              className={`w-full p-2 border rounded resize-none h-24 ${\n                isSelfPickup ? 'bg-gray-100 dark:bg-gray-800' : 'bg-white dark:bg-sidebar-primary'\n              } dark:border-gray-700`}\n              placeholder=\"Укажите ваш полный адрес\"\n              disabled={isSelfPickup}\n              required={selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping'}\n            />\n            {isSelfPickup && (\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                При самовывозе заказ можно забрать по указанному адресу\n              </p>\n            )}\n          </div>\n\n          <div className=\"flex justify-end space-x-2 pt-4 border-t dark:border-gray-700\">\n            {onCancel && (\n              <button\n                type=\"button\"\n                onClick={onCancel}\n                className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md\"\n                disabled={isSubmitting}\n              >\n                Отмена\n              </button>\n            )}\n            <button\n              type=\"submit\"\n              className=\"px-4 py-2 text-sm font-medium bg-telegram-blue text-white rounded-md hover:bg-blue-600 disabled:opacity-50\"\n              disabled={isSubmitting || (!email || !phone || (isLoadingRates || !selectedDeliveryType) || ((selectedDeliveryType === 'courier' || selectedDeliveryType === 'shipping') && !address))}\n            >\n              {isSubmitting ? (\n                <>\n                  <Loader2 className=\"inline-block mr-2 h-4 w-4 animate-spin\" />\n                  Сохранение...\n                </>\n              ) : (\n                'Продолжить'\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientInfoForm; ","import React from 'react';\nimport { Trash2, Plus, Minus } from 'lucide-react';\nimport { CartItem as CartItemType } from '@/contexts/CartContext';\nimport { useCart } from '@/contexts/CartContext';\nimport { hapticSelection } from '@/utils/telegramUtils';\n\ninterface CartItemProps {\n  item: CartItemType;\n  onRemove: () => void;\n}\n\nconst CartItem: React.FC<CartItemProps> = ({ item, onRemove }) => {\n  const { updateQuantity } = useCart();\n\n  const handleIncrease = () => {\n    hapticSelection();\n    updateQuantity(item.productId, item.size, item.quantity + 1);\n  };\n\n  const handleDecrease = () => {\n    hapticSelection();\n    if (item.quantity > 1) {\n      updateQuantity(item.productId, item.size, item.quantity - 1);\n    } else {\n      onRemove();\n    }\n  };\n\n  // Generate a placeholder image based on item type and category\n  const getPlaceholderImage = () => {\n    if (item.item_type === 'preorder') {\n      // Use different emojis based on product category\n      if (item.category_type === 'sneakers') {\n        return '👟'; // Sneaker emoji for shoes/sneakers\n      } else if (item.category_type === 'clothes') {\n        return '👕'; // T-shirt emoji for clothes\n      } else if (item.category_type === 'accessories') {\n        return '👜'; // Bag emoji for accessories\n      } else if (item.category_type === 'shirt') {\n        return '👕'; // Bag emoji for accessories\n      }\n      return '🔮'; // Default crystal ball emoji for other preorders\n    } else {\n      return '👕'; // Default clothing emoji\n    }\n  };\n\n  return (\n    <div className=\"flex items-start space-x-3 p-3 bg-white dark:bg-sidebar-accent rounded-lg shadow-sm\">\n      <div className=\"flex-shrink-0 w-20 h-20 bg-gray-100 dark:bg-gray-800 rounded-md flex items-center justify-center text-4xl overflow-hidden\">\n        {item.photo_url ? (\n          <img \n            src={item.photo_url} \n            alt={item.name} \n            className=\"w-full h-full object-cover\"\n            onError={(e) => {\n              // If image fails to load, show emoji placeholder\n              e.currentTarget.style.display = 'none';\n              e.currentTarget.parentElement!.innerHTML = getPlaceholderImage();\n            }}\n          />\n        ) : (\n          getPlaceholderImage()\n        )}\n      </div>\n      \n      <div className=\"flex-1 min-w-0\">\n        <div className=\"flex justify-between\">\n          <h3 className=\"text-sm font-medium text-gray-900 dark:text-gray-100 truncate\">\n            {item.name}\n          </h3>\n          <button \n            onClick={onRemove}\n            className=\"text-red-500 hover:text-red-700\"\n            aria-label=\"Remove item\"\n          >\n            <Trash2 size={16} />\n          </button>\n        </div>\n        \n        {item.item_type === 'preorder' ? (\n          <div className=\"mt-1 text-xs text-gray-600 dark:text-gray-400\">\n            <p className=\"truncate\">URL: {item.dewu_url}</p>\n            <p>Размер: {item.size || 'Не указан'}</p>\n            <p>Категория: {\n              item.category_type === 'sneakers' ? 'Обувь' : \n              item.category_type === 'clothes' ? 'Одежда' : \n              item.category_type === 'accessories' ? 'Аксессуары' : \n              item.category_type === 'shirt' ? 'Рубашка' : \n              item.category_type\n            }</p>\n            <p>Доставка: {(item.shipping_type || item.delivery_type) === 'cargo' ? 'Автомобиль' : 'Самолет'}</p>\n          </div>\n        ) : (\n          <div className=\"mt-1 text-xs text-gray-600 dark:text-gray-400\">\n            <p>{item.color && `Цвет: ${item.color}`}</p>\n            <p>Размер: {item.size}</p>\n          </div>\n        )}\n        \n        <div className=\"flex justify-between items-center mt-2\">\n          <div className=\"text-sm font-medium text-telegram-blue\">\n            ₽{(item.sale_price || item.price).toLocaleString()}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleDecrease}\n              className=\"p-1 rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700\"\n              aria-label=\"Decrease quantity\"\n            >\n              <Minus size={14} />\n            </button>\n            \n            <span className=\"text-sm font-medium w-6 text-center\">\n              {item.quantity}\n            </span>\n            \n            <button\n              onClick={handleIncrease}\n              className=\"p-1 rounded-full bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700\"\n              aria-label=\"Increase quantity\"\n            >\n              <Plus size={14} />\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartItem; ","import React, { useState } from 'react';\nimport { validatePromocode, calculateDiscountedPrice, Promocode } from '@/services/api/promocodeService';\nimport { Loader2, Tag } from 'lucide-react';\nimport { toast } from 'sonner';\n\ninterface PromocodeInputProps {\n  className?: string;\n  originalPrice: number;\n  onPromocodeApplied: (promocode: Promocode, finalPrice: number) => void;\n  onPromocodeRemoved: () => void;\n  currentPromocode?: Promocode;\n}\n\nconst PromocodeInput: React.FC<PromocodeInputProps> = ({\n  className,\n  originalPrice,\n  onPromocodeApplied,\n  onPromocodeRemoved,\n  currentPromocode\n}) => {\n  const [code, setCode] = useState('');\n  const [isValidating, setIsValidating] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!code.trim()) {\n      toast.error('Пожалуйста, введите промокод');\n      return;\n    }\n\n    setIsValidating(true);\n    try {\n      const response = await validatePromocode(code.trim());\n      if (response.success && response.promocode) {\n        const finalPrice = calculateDiscountedPrice(originalPrice, response.promocode);\n        onPromocodeApplied(response.promocode, finalPrice);\n        toast.success('Промокод успешно применен!');\n      } else {\n        toast.error(response.message || 'Недействительный промокод');\n      }\n    } catch (error) {\n      console.error('Error validating promocode:', error);\n      toast.error('Не удалось проверить промокод');\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  if (currentPromocode) {\n    return (\n      <div className={`flex items-center justify-between p-3 bg-telegram-secondary-bg rounded-lg ${className}`}>\n        <div className=\"flex items-center gap-2\">\n          <Tag className=\"text-telegram-blue\" size={16} />\n          <span className=\"text-sm font-medium\">{currentPromocode.promocode_text}</span>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {currentPromocode.discount_fixed ? \n              `-${currentPromocode.discount_fixed}₽` : \n              currentPromocode.discount_percent && currentPromocode.discount_percent !== 'null' ? \n                `-${currentPromocode.discount_percent}%` : \n                ''\n            }\n          </span>\n          <button\n            onClick={onPromocodeRemoved}\n            className=\"text-sm text-red-500 hover:text-red-600\"\n          >\n            Удалить\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={`flex gap-2 ${className}`}>\n      <input\n        type=\"text\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        placeholder=\"Введите промокод\"\n        className=\"flex-1 p-2 text-sm bg-white dark:bg-sidebar-primary/30 border border-gray-300 dark:border-gray-700 rounded-md\"\n        disabled={isValidating}\n      />\n      <button\n        type=\"submit\"\n        disabled={isValidating || !code.trim()}\n        className=\"px-4 py-2 bg-telegram-blue text-white rounded-md disabled:opacity-70 flex items-center\"\n      >\n        {isValidating ? (\n          <>\n            <Loader2 size={16} className=\"animate-spin mr-2\" />\n            Проверка...\n          </>\n        ) : (\n          'Применить'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default PromocodeInput; "],"names":["ToastProvider","ToastPrimitives.Provider","ToastViewport","React.forwardRef","className","props","ref","jsx","ToastPrimitives.Viewport","cn","toastVariants","cva","Toast","variant","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","X","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","useToast","id","title","description","action","jsxs","theme","useTheme","Sonner","TooltipProvider","TooltipPrimitive.Provider","TooltipContent","sideOffset","TooltipPrimitive.Content","BottomNavigation","location","useLocation","navigate","useNavigate","itemCount","useCart","isActive","path","handleNavigation","e","hapticSelection","Link","Home","ShoppingCart","Calculator","PageLayout","children","fullHeight","EmojiAvatar","emoji","username","size","randomize","displayEmoji","setDisplayEmoji","useState","useEffect","getConsistentEmoji","getRandomAvatarEmoji","sizeClasses","UserAvatar","user","sizeClass","Banner","image","link","handleClick","BannerSlider","banners","autoPlay","interval","currentIndex","setCurrentIndex","isTransitioning","setIsTransitioning","nextBanner","prevIndex","prevBanner","timer","banner","index","_","Fragment","ChevronLeft","ChevronRight","ProductCard","product","productEmoji","availableSizes","hasPhoto","getPhotoUrl","frontPhoto","photo","hapticImpact","LoadingSpinner","fillColor","SizeSelector","selectedSize","onChange","handleSizeChange","PhotoSwiper","photos","productName","fallbackEmoji","handleImageError","target","fallbackElement","Swiper","Pagination","Navigation","A11y","swiper","SwiperSlide","badgeVariants","Badge","OrderCard","order","isExpanded","setIsExpanded","getStatusColor","status","translateStatus","formatPrice","price","formatDate","dateString","getItemsCountText","count","ChevronUp","ChevronDown","item","ExternalLink","ReferralCard","loadError","setLoadError","isLoading","setIsLoading","referralInfo","refetchReferralInfo","useQuery","getUserReferralInfo","referralStats","refetchStats","getReferralStats","error","handleShare","shareReferralLink","handleCopyLink","toast","handleRetry","Loader2","RefreshCw","Copy","Share2","ClientInfoForm","initialEmail","initialPhone","initialAddress","clientInfo","onComplete","onCancel","email","setEmail","phone","setPhone","address","setAddress","isSubmitting","setIsSubmitting","deliveryTypes","setDeliveryTypes","selectedDeliveryType","setSelectedDeliveryType","isLoadingRates","setIsLoadingRates","hasAllRequiredInfo","fetchDeliveryOptions","types","fetchDeliveryTypes","courierType","type","shippingType","defaultType","fetchClientInfo","info","getClientInfo","selectedDeliveryOption","selectedDeliveryRate","isSelfPickup","userAddress","setUserAddress","initialAddr","handleAddressChange","newAddress","handleSubmit","updateClientInfo","CartItem","onRemove","updateQuantity","handleIncrease","handleDecrease","getPlaceholderImage","Trash2","Minus","Plus","PromocodeInput","originalPrice","onPromocodeApplied","onPromocodeRemoved","currentPromocode","code","setCode","isValidating","setIsValidating","response","validatePromocode","finalPrice","calculateDiscountedPrice","Tag"],"mappings":"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"}